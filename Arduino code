#define IR_SENSOR_RIGHT 3
#define IR_SENSOR_LEFT 2
#define echo 11 //ultrasonic
#define trig 12//ultrasonic

int FORWARD_SPEED = 100;
int ROTATION_SPEED = 100;

//Right motor
int enableRightMotor = 10;//speed & direction of motor
int rMotorP = 7;
int rMotorN = 8;

//Left motor
int enableLeftMotor = 9;//speed & direction of motor
int lMotorP = 6;
int lMotorN = 5;

long duration;
int distance;

void setup() {
  Serial.begin(9600);
  pinMode(enableRightMotor, OUTPUT);
  pinMode(rMotorP, OUTPUT); //arduino bytl3 signal f output
  pinMode(rMotorN, OUTPUT);

  pinMode(enableLeftMotor, OUTPUT);
  pinMode(lMotorP, OUTPUT);
  pinMode(lMotorN, OUTPUT);

  pinMode(IR_SENSOR_RIGHT, INPUT);
  pinMode(IR_SENSOR_LEFT, INPUT); //arduino hya5od signals f input

  pinMode(trig, OUTPUT);
  pinMode(echo, INPUT);

  rotateMotor(0, 0);
}


void loop() {
  //ULTRASONIC PART
  digitalWrite(trig, LOW); // low bytfy comp.    bytfy signal
  delayMicroseconds(5);
  digitalWrite(trig, HIGH); // high by48l comp.      bytl3 signal
  delayMicroseconds(5);
  digitalWrite(trig, LOW);
  duration = pulseIn(echo, HIGH);
  distance = duration * 0.034 / 2;   //factor of speed of sound centemeter/ microsecond(0.034)

  //IR PART
  int rightIRSensorValue = digitalRead(IR_SENSOR_RIGHT); //value
  int leftIRSensorValue = digitalRead(IR_SENSOR_LEFT);

  //MOVEMENT LOGIC
  if (distance <= 12 || (rightIRSensorValue == HIGH && leftIRSensorValue == HIGH)) {
    rotateMotor(0, 0);
  } else if (rightIRSensorValue == LOW && leftIRSensorValue == LOW) {
    rotateMotor(FORWARD_SPEED, FORWARD_SPEED);//forward
  } else if (rightIRSensorValue == HIGH && leftIRSensorValue == LOW) {
    rotateMotor(-ROTATION_SPEED, ROTATION_SPEED);//right
  } else if (rightIRSensorValue == LOW && leftIRSensorValue == HIGH) {
    rotateMotor(ROTATION_SPEED, -ROTATION_SPEED);//left
  }
}


void rotateMotor(int rightMotorSpeed, int leftMotorSpeed) {

  if (rightMotorSpeed < 0) {
    digitalWrite(rMotorP, LOW);
    digitalWrite(rMotorN, HIGH);
  } else if (rightMotorSpeed > 0) {
    digitalWrite(rMotorP, HIGH);
    digitalWrite(rMotorN, LOW);
  } else {
    digitalWrite(rMotorP, LOW);
    digitalWrite(rMotorN, LOW);
  }

  if (leftMotorSpeed < 0) {
    digitalWrite(lMotorP, LOW);
    digitalWrite(lMotorN, HIGH);
  } else if (leftMotorSpeed > 0) {
    digitalWrite(lMotorP, HIGH);
    digitalWrite(lMotorN, LOW);
  } else {
    digitalWrite(lMotorP, LOW);
    digitalWrite(lMotorN, LOW);
  }
  analogWrite(enableRightMotor, abs(rightMotorSpeed));
  analogWrite(enableLeftMotor, abs(leftMotorSpeed));
}
